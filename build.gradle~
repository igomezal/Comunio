// Top-level build file where you can add configuration options common to all sub-projects/modules.
import org.ajoberstar.grgit.*

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.3.0'
	classpath 'org.ajoberstar:gradle-git:1.4.2'
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        jcenter()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

task cloneGitRepo{
	doLast{
		Grgit.clone(dir: file('./repo'), uri: 'https://github.com/igomezal/Comunio.git')
		Grgit.init(dir: file('./repo'))
	}
}

task pull{
	description 'Pull proyecto'
	doLast{
		def repo = Grgit.open(project.file('.'))
		repo.pull()
	}
}
task push{
	description 'Push proyecto'
	doLast{
		def repo = Grgit.open(project.file('.'))
		if(project.hasProperty("rama") && (repo.branch.getCurrent().getName() != rama)){
			repo.checkout(branch: rama,createBranch:true)
			repo.push()
		}else if(project.hasProperty("rama") && (repo.branch.getCurrent().getName() == rama)){
			repo.commit(message: 'Cambios Gradle',all:true)
			repo.push()
		}else if(repo.branch.getCurrent().getName() == "rama-gradle"){
			repo.commit(message: 'Cambios Gradle',all:true)
			repo.push()
		}else{		
			repo.checkout(branch: 'rama-gradle',createBranch:true)
			//repo.add(update: true)
			repo.commit(message: 'Cambios Gradle',all:true)
			repo.push()
		}
		print "Realizado push a la rama: ${repo.branch.getCurrent().getName()} en la que se encuentra actualmente"	
	}	
}



